
SUBDIRS(nvcore)
SUBDIRS(nvmath)
SUBDIRS(nvimage)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})

# OpenGL
INCLUDE(FindOpenGL)
IF(OPENGL_FOUND)
	MESSAGE(STATUS "Looking for OpenGL - found")
ELSE(OPENGL_FOUND)
	MESSAGE(STATUS "Looking for OpenGL - not found")
ENDIF(OPENGL_FOUND)

# GLUT
INCLUDE(${NV_CMAKE_DIR}/FindGLUT.cmake)
#INCLUDE(FindGLUT)
IF(GLUT_FOUND)
	MESSAGE(STATUS "Looking for GLUT - found")
ELSE(GLUT_FOUND)
	MESSAGE(STATUS "Looking for GLUT - not found")
ENDIF(GLUT_FOUND)

# GLEW
INCLUDE(${NV_CMAKE_DIR}/FindGLEW.cmake)
IF(GLEW_FOUND)
	MESSAGE(STATUS "Looking for GLEW - found")
ELSE(GLEW_FOUND)
	MESSAGE(STATUS "Looking for GLEW - not found")
ENDIF(GLEW_FOUND)

# Cg
INCLUDE(${NV_CMAKE_DIR}/FindCg.cmake)
IF(CG_FOUND)
	MESSAGE(STATUS "Looking for Cg - found")
ELSE(CG_FOUND)
	MESSAGE(STATUS "Looking for Cg - not found")
ENDIF(CG_FOUND)

# CUDA
INCLUDE(${NV_CMAKE_DIR}/FindCUDA.cmake)
IF(CUDA_FOUND)
	MESSAGE(STATUS "Looking for CUDA - found")
ELSE(CUDA_FOUND)
	MESSAGE(STATUS "Looking for CUDA - not found")
ENDIF(CUDA_FOUND)

# JPEG
INCLUDE(FindJPEG)
IF(JPEG_FOUND)
	SET(HAVE_JPEG JPEG_FOUND)
	MESSAGE(STATUS "Looking for JPEG - found")
ELSE(JPEG_FOUND)
	MESSAGE(STATUS "Looking for JPEG - not found")
ENDIF(JPEG_FOUND)

# PNG
INCLUDE(FindPNG)
IF(PNG_FOUND)
	SET(HAVE_PNG PNG_FOUND)
	MESSAGE(STATUS "Looking for PNG - found")
ELSE(PNG_FOUND)
	MESSAGE(STATUS "Looking for PNG - not found")
ENDIF(PNG_FOUND)

# TIFF
INCLUDE(FindTIFF)
IF(TIFF_FOUND)
	SET(HAVE_TIFF TIFF_FOUND)
	MESSAGE(STATUS "Looking for TIFF - found")
ELSE(TIFF_FOUND)
	MESSAGE(STATUS "Looking for TIFF - not found")
ENDIF(TIFF_FOUND)

# Qt
FIND_PACKAGE(Qt4)

# Threads
FIND_PACKAGE(Threads)

# configuration file
INCLUDE(CheckIncludeFiles)

CHECK_INCLUDE_FILES(unistd.h HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(stdarg.h HAVE_STDARG_H)
CHECK_INCLUDE_FILES(signal.h HAVE_SIGNAL_H)
CHECK_INCLUDE_FILES(execinfo.h HAVE_EXECINFO_H)
CHECK_INCLUDE_FILES(malloc.h HAVE_MALLOC_H)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/nvconfig.h.in ${CMAKE_CURRENT_BINARY_DIR}/nvconfig.h)

