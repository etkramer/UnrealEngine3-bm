/**
 * Copyright 1998-2008 Epic Games, Inc. All Rights Reserved.
 */

/**
 * This file is used to provide a common area for online constants to be added
 */

// Presence strings
const CONTEXT_PRESENCE_MENUPRESENCE             = 0;
const CONTEXT_PRESENCE_COOPPRESENCE             = 1;
const CONTEXT_PRESENCE_PARTYWAITPRESENCE        = 2;
const CONTEXT_PRESENCE_PARTYSEARCHPRESENCE      = 3;
const CONTEXT_PRESENCE_VERSUSPRESENCE           = 4;
const CONTEXT_PRESENCE_PRIVATEPARTYPRESENCE     = 5;
const CONTEXT_PRESENCE_SYSTEMLINKPARTYPRESENCE  = 6;
const CONTEXT_PRESENCE_CAMPAIGNPARTYPRESENCE    = 7;
const CONTEXT_PRESENCE_SYSTEMLINKVERSUSPRESENCE = 8;
const CONTEXT_PRESENCE_PRIVATEVERSUSPRESENCE    = 9;
const CONTEXT_PRESENCE_HORDEPRESENCE            = 10;
const CONTEXT_PRESENCE_TRAININGGROUNDSPRESENCE  = 11;

// Used to indicate which character is being played in coop
const CONTEXT_COOPCHARNAME                      = 7;
const CONTEXT_COOPCHARNAME_MARCUS               = 0;
const CONTEXT_COOPCHARNAME_DOM                  = 1;


// Type of game being played
const CONTEXT_GAME_MODE							= 0x0000800B;

// Values for CONTEXT_GAME_MODE
const CONTEXT_GAME_MODE_COOP                    = 0;
const CONTEXT_GAME_MODE_PARTY                   = 1;
const CONTEXT_GAME_MODE_VERSUS                  = 2;

// Game searches
const SESSION_MATCH_QUERY_COOP                  = 0;
const SESSION_MATCH_QUERY_PARTY                 = 1;
const SESSION_MATCH_QUERY_VERSUS                = 2;

// Indicates whether a party is joinable by anyone or not
const PROPERTY_ISPUBLICPARTY                    = 0x10000001;

// Contexts used in partial party matchmaking
const CONTEXT_PARTYSLOT_1                       = 2;
const CONTEXT_PARTYSLOT_2                       = 3;
const CONTEXT_PARTYSLOT_3                       = 4;
const CONTEXT_PARTYSLOT_4                       = 5;
const CONTEXT_PARTYSLOT_5                       = 6;

// Values the party slot contexts can hold (tristate boolean ;) )
const CONTEXT_PARTYSLOT_BLOCKED				    = 0;
const CONTEXT_PARTYSLOT_WANTS					= 1;
const CONTEXT_PARTYSLOT_NEEDS					= 2;
const CONTEXT_PARTYSLOT_ANY						= 3;

// The property indicating what playlist a party is searching for/playing on
const PROPERTY_PLAYLISTID                       = 0x1000000B;

// Different versus game types (Warzone, Assassination, etc.)
const CONTEXT_VERSUSMODES                       = 0;

// Values for CONTEXT_VERSUSMODES is the enum called EGearMPTypes in GearTypes.uc

// The map that is being played
const CONTEXT_MAPNAME                           = 1;

// Values for CONTEXT_MAPNAME
const CONTEXT_MAPNAME_FLOOD                     = 0;
const CONTEXT_MAPNAME_GRIDLOCK                  = 1;
const CONTEXT_MAPNAME_HAIL                      = 2;
const CONTEXT_MAPNAME_WAYSTATION				= 3;

// Whether to use friendly fire or not
const CONTEXT_FRIENDLYFIRE						= 2;

// Values for CONTEXT_FRIENDLYFIRE
const CONTEXT_FRIENDLYFIRE_NO                   = 0;
const CONTEXT_FRIENDLYFIRE_YES                  = 1;

// Amount of time each round takes
const CONTEXT_ROUNDTIME							= 3;

// Values for CONTEXT_ROUNDTIME
const CONTEXT_ROUNDTIME_ONE						= 0;
const CONTEXT_ROUNDTIME_TWO						= 1;
const CONTEXT_ROUNDTIME_THREE					= 2;
const CONTEXT_ROUNDTIME_FOUR					= 3;
const CONTEXT_ROUNDTIME_FIVE					= 4;
const CONTEXT_ROUNDTIME_SIX						= 5;
const CONTEXT_ROUNDTIME_SEVEN					= 6;
const CONTEXT_ROUNDTIME_EIGHT					= 7;
const CONTEXT_ROUNDTIME_NINE					= 8;
const CONTEXT_ROUNDTIME_TEN						= 9;

// Amount of time a DBNO player will bleed before rezzing or dying
const CONTEXT_BLEEDOUTTIME						= 4;

// Values for CONTEXT_BLEEDOUTTIME
const CONTEXT_BLEEDOUTTIME_FIVE                 = 0;
const CONTEXT_BLEEDOUTTIME_TEN                  = 1;
const CONTEXT_BLEEDOUTTIME_FIFTEEN              = 2;
const CONTEXT_BLEEDOUTTIME_TWENTY               = 3;
const CONTEXT_BLEEDOUTTIME_THIRTY               = 4;
const CONTEXT_BLEEDOUTTIME_SIXTY                = 5;

// Whether the weapon swapping list is used or not
const CONTEXT_WEAPONSWAP						= 5;

// Values for CONTEXT_WEAPONSWAP
const CONTEXT_WEAPONSWAP_CYCLE					= 0;
const CONTEXT_WEAPONSWAP_NORMAL					= 1;
const CONTEXT_WEAPONSWAP_CUSTOM					= 2;

// Number of rounds to win the match
const CONTEXT_ROUNDSTOWIN						= 6;

// Values for CONTEXT_ROUNDSTOWIN
const CONTEXT_ROUNDSTOWIN_ONE					= 0;
const CONTEXT_ROUNDSTOWIN_TWO					= 1;
const CONTEXT_ROUNDSTOWIN_THREE					= 2;
const CONTEXT_ROUNDSTOWIN_FOUR					= 3;
const CONTEXT_ROUNDSTOWIN_FIVE					= 4;
const CONTEXT_ROUNDSTOWIN_SIX					= 5;
const CONTEXT_ROUNDSTOWIN_SEVEN					= 6;
const CONTEXT_ROUNDSTOWIN_EIGHT					= 7;
const CONTEXT_ROUNDSTOWIN_NINE					= 8;
const CONTEXT_ROUNDSTOWIN_TEN					= 9;
const CONTEXT_ROUNDSTOWIN_ELEVEN				= 10;
const CONTEXT_ROUNDSTOWIN_TWELVE				= 11;
const CONTEXT_ROUNDSTOWIN_THIRTEEN				= 12;
const CONTEXT_ROUNDSTOWIN_FOURTEEN				= 13;
const CONTEXT_ROUNDSTOWIN_FIFTEEN				= 14;

// Difficulty level of AI bots
const CONTEXT_BOTDIFFICULTY						= 7;
// Difficulty level of AI enemies (Horde)
const CONTEXT_ENEMYDIFFICULTY					= 8;
// Difficulty level of the Meatflag AI (Meatflag)
const CONTEXT_MEATFLAGDIFFICULTY				= 9;

// Values for all AI difficulty levels
const CONTEXT_AIDIFFICULTY_CASUAL				= 0;
const CONTEXT_AIDIFFICULTY_NORMAL				= 1;
const CONTEXT_AIDIFFICULTY_HARDCORE				= 2;
const CONTEXT_AIDIFFICULTY_INSANE				= 3;

// Score needed to end a round in Annex/KOTH
const CONTEXT_ROUNDSCORE						= 10;

// Values for CONTEXT_ROUNDSCORE in an Annex match
const CONTEXT_ROUNDSCORE_ANNEX_120				= 0;
const CONTEXT_ROUNDSCORE_ANNEX_180				= 1;
const CONTEXT_ROUNDSCORE_ANNEX_240				= 2;
const CONTEXT_ROUNDSCORE_ANNEX_300				= 3;
const CONTEXT_ROUNDSCORE_ANNEX_360				= 4;
const CONTEXT_ROUNDSCORE_ANNEX_420				= 5;
const CONTEXT_ROUNDSCORE_ANNEX_480				= 6;

// Values for CONTEXT_ROUNDSCORE in a KOTH match
const CONTEXT_ROUNDSCORE_KOTH_60				= 0;
const CONTEXT_ROUNDSCORE_KOTH_90				= 1;
const CONTEXT_ROUNDSCORE_KOTH_120				= 2;
const CONTEXT_ROUNDSCORE_KOTH_150				= 3;
const CONTEXT_ROUNDSCORE_KOTH_180				= 4;
const CONTEXT_ROUNDSCORE_KOTH_210				= 5;
const CONTEXT_ROUNDSCORE_KOTH_240				= 6;

// Number of bots to add to the player list
const CONTEXT_NUMBOTS							= 11;

// Values for CONTEXT_NUMBOTS
const CONTEXT_NUMBOTS_0							= 0;
const CONTEXT_NUMBOTS_1							= 1;
const CONTEXT_NUMBOTS_2							= 2;
const CONTEXT_NUMBOTS_3							= 3;
const CONTEXT_NUMBOTS_4							= 4;
const CONTEXT_NUMBOTS_5							= 5;
const CONTEXT_NUMBOTS_6							= 6;
const CONTEXT_NUMBOTS_7							= 7;
const CONTEXT_NUMBOTS_8							= 8;
const CONTEXT_NUMBOTS_9							= 9;

// Wave to start the Horde match from
const CONTEXT_HORDE_WAVE						= 12;

// Values for CONTEXT_HORDE_WAVE
const CONTEXT_HORDE_WAVE_0						= 0;
const CONTEXT_HORDE_WAVE_1						= 1;
const CONTEXT_HORDE_WAVE_2						= 2;
const CONTEXT_HORDE_WAVE_3						= 3;
const CONTEXT_HORDE_WAVE_4						= 4;
const CONTEXT_HORDE_WAVE_5						= 5;
const CONTEXT_HORDE_WAVE_6						= 6;
const CONTEXT_HORDE_WAVE_7						= 7;
const CONTEXT_HORDE_WAVE_8						= 8;
const CONTEXT_HORDE_WAVE_9						= 9;
const CONTEXT_HORDE_WAVE_10						= 10;
const CONTEXT_HORDE_WAVE_11						= 11;
const CONTEXT_HORDE_WAVE_12						= 12;
const CONTEXT_HORDE_WAVE_13						= 13;
const CONTEXT_HORDE_WAVE_14						= 14;
const CONTEXT_HORDE_WAVE_15						= 15;
const CONTEXT_HORDE_WAVE_16						= 16;
const CONTEXT_HORDE_WAVE_17						= 17;
const CONTEXT_HORDE_WAVE_18						= 18;
const CONTEXT_HORDE_WAVE_19						= 19;
const CONTEXT_HORDE_WAVE_20						= 20;
const CONTEXT_HORDE_WAVE_21						= 21;
const CONTEXT_HORDE_WAVE_22						= 22;
const CONTEXT_HORDE_WAVE_23						= 23;
const CONTEXT_HORDE_WAVE_24						= 24;
const CONTEXT_HORDE_WAVE_25						= 25;
const CONTEXT_HORDE_WAVE_26						= 26;
const CONTEXT_HORDE_WAVE_27						= 27;
const CONTEXT_HORDE_WAVE_28						= 28;
const CONTEXT_HORDE_WAVE_29						= 29;
const CONTEXT_HORDE_WAVE_30						= 30;
const CONTEXT_HORDE_WAVE_31						= 31;
const CONTEXT_HORDE_WAVE_32						= 32;
const CONTEXT_HORDE_WAVE_33						= 33;
const CONTEXT_HORDE_WAVE_34						= 34;
const CONTEXT_HORDE_WAVE_35						= 35;
const CONTEXT_HORDE_WAVE_36						= 36;
const CONTEXT_HORDE_WAVE_37						= 37;
const CONTEXT_HORDE_WAVE_38						= 38;
const CONTEXT_HORDE_WAVE_39						= 39;
const CONTEXT_HORDE_WAVE_40						= 40;
const CONTEXT_HORDE_WAVE_41						= 41;
const CONTEXT_HORDE_WAVE_42						= 42;
const CONTEXT_HORDE_WAVE_43						= 43;
const CONTEXT_HORDE_WAVE_44						= 44;
const CONTEXT_HORDE_WAVE_45						= 45;
const CONTEXT_HORDE_WAVE_46						= 46;
const CONTEXT_HORDE_WAVE_47						= 47;
const CONTEXT_HORDE_WAVE_48						= 48;
const CONTEXT_HORDE_WAVE_49						= 49;

// Score needed to win in Wingman
const CONTEXT_WINGMAN_SCOREGOAL					= 13;

// Values for CONTEXT_WINGMAN_SCOREGOAL
const CONTEXT_WINGMAN_SCOREGOAL_10				= 0;
const CONTEXT_WINGMAN_SCOREGOAL_15				= 1;
const CONTEXT_WINGMAN_SCOREGOAL_20				= 2;
const CONTEXT_WINGMAN_SCOREGOAL_25				= 3;
const CONTEXT_WINGMAN_SCOREGOAL_30				= 4;

// Act number for campaign games
const PROPERTY_ACTNUM							= 0x10000002;

// Chapter number for campaign games
const PROPERTY_CHAPTERNUM                       = 0x10000003;

// Kind of invite policy coop is using - values come from profile enum
const CONTEXT_COOP_INVITE						= 14;

// Leaderboards
const STATS_VIEW_WARZONEALLTIME					= 1;
const STATS_VIEW_ANNEXALLTIMEPRIVATE            = 2;
const STATS_VIEW_WARZONEDAILY                   = 3;
const STATS_VIEW_WARZONEWEEKLY                  = 4;
const STATS_VIEW_WARZONEMONTHLY                 = 5;
const STATS_VIEW_EXECUTIONDAILY                 = 6;
const STATS_VIEW_EXECUTIONWEEKLY                = 7;
const STATS_VIEW_EXECUTIONMONTHLY               = 8;
const STATS_VIEW_EXECUTIONALLTIME               = 9;
const STATS_VIEW_GUARDIANDAILY                  = 10;
const STATS_VIEW_GUARDIANWEEKLY                 = 11;
const STATS_VIEW_GUARDIANMONTHLY                = 12;
const STATS_VIEW_GUARDIANALLTIME                = 13;
const STATS_VIEW_WINGMANDAILY                   = 14;
const STATS_VIEW_WINGMANWEEKLY                  = 15;
const STATS_VIEW_WINGMANMONTHLY                 = 16;
const STATS_VIEW_WINGMANALLTIME                 = 17;
const STATS_VIEW_ANNEXDAILY                     = 18;
const STATS_VIEW_ANNEXWEEKLY                    = 19;
const STATS_VIEW_ANNEXMONTHLY                   = 20;
const STATS_VIEW_ANNEXALLTIME                   = 21;
const STATS_VIEW_KOTHDAILY                      = 22;
const STATS_VIEW_KOTHWEEKLY                     = 23;
const STATS_VIEW_KOTHMONTHLY                    = 24;
const STATS_VIEW_KOTHALLTIME                    = 25;
const STATS_VIEW_MEATFLAGDAILY                  = 26;
const STATS_VIEW_MEATFLAGWEEKLY                 = 27;
const STATS_VIEW_MEATFLAGMONTHLY                = 28;
const STATS_VIEW_MEATFLAGALLTIME                = 29;
// Horde is 30 through 53
const STATS_VIEW_EXECUTIONALLTIMEPRIVATE        = 54;
const STATS_VIEW_GUARDIANALLTIMEPRIVATE         = 55;
const STATS_VIEW_KOTHALLTIMEPRIVATE             = 56;
const STATS_VIEW_MEATFLAGALLTIMEPRIVATE         = 57;
const STATS_VIEW_WARZONEALLTIMEPRIVATE          = 58;
const STATS_VIEW_WINGMANALLTIMEPRIVATE          = 59;

// Live specific leaderboard columns

const STATS_COLUMN_SKILL						= 61;
const STATS_COLUMN_GAMESPLAYED					= 62;
const STATS_COLUMN_MU							= 63;
const STATS_COLUMN_SIGMA						= 64;

// Leaderboard columns for reading

const STATS_COLUMN_KILLS				= 1;
const STATS_COLUMN_DEATHS				= 2;
const STATS_COLUMN_REVIVES				= 3;
const STATS_COLUMN_TAKEDOWNS			= 4;
const STATS_COLUMN_POINTS				= 5;
const STATS_COLUMN_MATCHESPLAYED		= 6;
const STATS_COLUMN_MATCHESWON			= 7;
const STATS_COLUMN_MATCHESLOST			= 8;
const STATS_COLUMN_ROUNDSPLAYED			= 9;
const STATS_COLUMN_ROUNDSWON			= 10;
const STATS_COLUMN_ROUNDSLOST			= 11;
const STATS_COLUMN_ROUNDSDRAW			= 12;

const STATS_COLUMN_ANNEX_CAPTURES				= 13;
const STATS_COLUMN_ANNEX_BREAKS					= 14;

const STATS_COLUMN_CASUALDIFFICULTY = 15;
const STATS_COLUMN_NORMALDIFFICULTY = 16;
const STATS_COLUMN_HARDCOREDIFFICULTY = 17;
const STATS_COLUMN_INSANEDIFFICULTY = 18;
const STATS_COLUMN_KOTH_RINGPOINTS				= 19;

const STATS_COLUMN_MEATFLAG_MEATFLAGCAPTURES	= 13;

// Synthesized stats
const STATS_COLUMN_KILLDEATH_RATIO = 30;
const STATS_COLUMN_POINTSPERMATCH_RATIO = 31;
const STATS_COLUMN_POINTSPERROUND_RATIO = 32;

const STATS_COLUMN_HORDE_WAVE					= 1;
const STATS_COLUMN_HORDE_POINTS					= 2;

// Leaderboard properties for writing

const PROPERTY_KILLS                            = 0x10000004;
const PROPERTY_DEATHS                           = 0x10000005;
const PROPERTY_TAKEDOWNS                        = 0x10000006;
const PROPERTY_REVIVES                          = 0x10000007;
const PROPERTY_POINTS                           = 0x10000008;
const PROPERTY_POINTSRATED                      = 0x20000009;
const PROPERTY_WAVE                             = 0x1000000A;
const PROPERTY_MATCHESPLAYED                    = 0x1000000C;
const PROPERTY_MATCHESWON                       = 0x1000000D;
const PROPERTY_MATCHESLOST                      = 0x1000000E;
const PROPERTY_ROUNDSPLAYED                     = 0x1000000F;
const PROPERTY_ROUNDSWON                        = 0x10000010;
const PROPERTY_ROUNDSLOST                       = 0x10000011;
const PROPERTY_ROUNDSDRAW                       = 0x10000012;
const PROPERTY_MINIBOSSKILL                     = 0x10000013;
const PROPERTY_GRUNTKILL                        = 0x10000014;
const PROPERTY_MINIONKILL                       = 0x10000015;
const PROPERTY_RINGCAPTURE                      = 0x10000016;
const PROPERTY_RINGBREAK                        = 0x10000017;
const PROPERTY_RINGPOINTS                       = 0x10000018;
const PROPERTY_MEATFLAGCAPTURE                  = 0x10000019;
const PROPERTY_DIFFICULTY                       = 0x1000001A;
const PROPERTY_CASUALDIFFICULTY                 = 0x1000001B;
const PROPERTY_NORMALDIFFICULTY                 = 0x1000001C;
const PROPERTY_HARDCOREDIFFICULTY               = 0x1000001D;
const PROPERTY_INSANEDIFFICULTY                 = 0x1000001E;

// Skill leaderboards for ranked game modes

const STATS_VIEW_SKILL_RANKED_COOP              = 0xFFFF0000;
const STATS_VIEW_SKILL_RANKED_PARTY             = 0xFFFF0001;
const STATS_VIEW_SKILL_RANKED_VERSUS            = 0xFFFF0002;

// Skill leaderboards for unranked (standard) game modes

const STATS_VIEW_SKILL_STANDARD_COOP            = 0xFFFE0000;
const STATS_VIEW_SKILL_STANDARD_PARTY           = 0xFFFE0001;
const STATS_VIEW_SKILL_STANDARD_VERSUS          = 0xFFFE0002;
