/*=============================================================================
 Copyright 1998-2008 Epic Games, Inc. All Rights Reserved.
=============================================================================*/

#ifndef __D3DMESHUTILS_H__
#define __D3DMESHUTILS_H__

#if _WINDOWS

// Temporary vertex for utility class
struct FUtilVertex
{
	FVector   Position;
	FVector2D UVs[4];
	FColor	  Color;
	DWORD    SmoothingMask;
	INT FragmentIndex;
	UBOOL bOverrideTangentBasis;
	FVector TangentX;
	FVector TangentY;
	FVector TangentZ;
};

/**
*
* This utility class builds on D3DX functionality.
* Used for editor helpers.
*
*/
class FD3DMeshUtilities
{

private:

	/**
	* Creates a D3DXMESH from a FStaticMeshRenderData
	* @param Triangles The triangles to create the mesh from.
	* @param OutD3DMesh Mesh to create
	* @return Boolean representing success or failure
	*/
	UBOOL ConvertStaticMeshTrianglesToD3DXMesh(
		const TArray<FStaticMeshTriangle>& Triangles,
		TRefCountPtr<ID3DXMesh>& OutD3DMesh
		);

	/**
	* Creates a FStaticMeshRenderData from a D3DXMesh
	* @param DestMesh Destination mesh to extract to
	* @param NumUVs Number of UVs
	* @param Elements Elements array
	* @return Boolean representing success or failure
	*/
	UBOOL ConvertD3DXMeshToStaticMesh(
		TRefCountPtr<ID3DXMesh>& D3DMesh, 
		FStaticMeshRenderData& DestMesh, 
		INT NumUVs, 
		TArray<FStaticMeshElement>& Elements, 
		UBOOL bClearDestElements
		);

public:

	FD3DMeshUtilities() {}

	/**
	* Generates a simplified LOD from a static mesh
	* @param SourceStaticMesh - The input mesh.  Can be the same as the output mesh, as long as the desired LOD is different.
	* @param DestStaticMesh - Output mesh.  Can be the same as the input mesh
	* @param DesiredLOD - The LOD level to generate the simplified mesh for
	* @param DesiredTriangles - The desired triangle count for the LOD. Resulting triangle count may not be desired triangle count.
	* @return TRUE if successful
	*/
	UBOOL GenerateLOD( UStaticMesh* SourceStaticMesh, UStaticMesh* DestStaticMesh, INT DesiredLOD, INT DesiredTriangles );

	/**
	* Generates a unique UV layout for a static mesh
	* @param StaticMesh - The input/output mesh
	* @param LODIndex - The LOD level
	* @param TexCoordIndex - Index of the uv channel to overwrite or create
	* @param MaxDesiredStretch - The amount of stretching allowed. 0 means no stretching is allowed, 1 means any amount of stretching can be used. 
	* @param ChartsGenerated - Number of charts generated by the uv unwrap algorithm.
	* @param bKeepExistingCoordinates - Don't modify the charts which the mesh already has; only repartition the triangles that aren't in a chart yet.
	* @return TRUE if successful
	*/
	UBOOL GenerateUVs(
		UStaticMesh* StaticMesh,
		UINT LODIndex,
		UINT TexCoordIndex,
		UBOOL bKeepExistingCoordinates,
		FLOAT &MaxDesiredStretch,
		UINT &ChartsGenerated
		);
};

#endif

#endif
