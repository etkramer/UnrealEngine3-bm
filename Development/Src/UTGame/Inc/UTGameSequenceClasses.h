/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
    Copyright 1998-2008 Epic Games, Inc. All Rights Reserved.
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif


// Split enums from the rest of the header so they can be included earlier
// than the rest of the header file by including this file twice with different
// #define wrappers. See Engine.h and look at EngineClasses.h for an example.
#if !NO_ENUMS && !defined(NAMES_ONLY)

#ifndef INCLUDED_UTGAME_SEQUENCE_ENUMS
#define INCLUDED_UTGAME_SEQUENCE_ENUMS 1


#endif // !INCLUDED_UTGAME_SEQUENCE_ENUMS
#endif // !NO_ENUMS

#if !ENUMS_ONLY

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern FName UTGAME_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

#ifndef INCLUDED_UTGAME_SEQUENCE_CLASSES
#define INCLUDED_UTGAME_SEQUENCE_CLASSES 1

class UUTSeqAct_UnlockChar : public USequenceAction
{
public:
    //## BEGIN PROPS UTSeqAct_UnlockChar
    FStringNoInit Char;
    //## END PROPS UTSeqAct_UnlockChar

    DECLARE_CLASS(UUTSeqAct_UnlockChar,USequenceAction,0,UTGame)
	virtual void Activated();
};

class UUTSeqEvent_TouchStatus : public USeqEvent_Touch
{
public:
    //## BEGIN PROPS UTSeqEvent_TouchStatus
    BITFIELD bCheckingTouch:1;
    //## END PROPS UTSeqEvent_TouchStatus

    DECLARE_CLASS(UUTSeqEvent_TouchStatus,USeqEvent_Touch,0,UTGame)
protected:
	virtual void ActivateEvent(AActor* InOriginator, AActor* InInstigator, TArray<INT>* ActivateIndices = NULL, UBOOL bPushTop = FALSE, UBOOL bFromQueued = FALSE);
};

class UUTSeqVar_Character : public USeqVar_Object
{
public:
    //## BEGIN PROPS UTSeqVar_Character
    FStringNoInit CharacterName;
    //## END PROPS UTSeqVar_Character

    DECLARE_CLASS(UUTSeqVar_Character,USeqVar_Object,0,UTGame)
	/** @return whether C is playing the character specified by our CharacterName */
	UBOOL MatchCharacter(AController* C);

	UObject** GetObjectRef(INT Idx);

	virtual FString GetValueStr()
	{
		return (CharacterName != TEXT("")) ? CharacterName : FString(TEXT("None"));
	}
};

#endif // !INCLUDED_UTGAME_SEQUENCE_CLASSES
#endif // !NAMES_ONLY


#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#ifdef STATIC_LINKING_MOJO
#ifndef UTGAME_SEQUENCE_NATIVE_DEFS
#define UTGAME_SEQUENCE_NATIVE_DEFS

DECLARE_NATIVE_TYPE(UTGame,UUTSeqAct_UnlockChar);
DECLARE_NATIVE_TYPE(UTGame,UUTSeqEvent_TouchStatus);
DECLARE_NATIVE_TYPE(UTGame,UUTSeqVar_Character);

#define AUTO_INITIALIZE_REGISTRANTS_UTGAME_SEQUENCE \
	UUTSeqAct_UnlockChar::StaticClass(); \
	UUTSeqEvent_TouchStatus::StaticClass(); \
	UUTSeqVar_Character::StaticClass(); \

#endif // UTGAME_SEQUENCE_NATIVE_DEFS

#ifdef NATIVES_ONLY
#endif // NATIVES_ONLY
#endif // STATIC_LINKING_MOJO

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_OFFSET_NODIE(U,UTSeqAct_UnlockChar,Char)
VERIFY_CLASS_SIZE_NODIE(UUTSeqAct_UnlockChar)
VERIFY_CLASS_SIZE_NODIE(UUTSeqEvent_TouchStatus)
VERIFY_CLASS_OFFSET_NODIE(U,UTSeqVar_Character,CharacterName)
VERIFY_CLASS_SIZE_NODIE(UUTSeqVar_Character)
#endif // VERIFY_CLASS_SIZES
#endif // !ENUMS_ONLY

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
